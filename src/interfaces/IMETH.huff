////////////////////////////////////////////////////////////////
//                      METH ABI                              //
////////////////////////////////////////////////////////////////
// =================== Methods ===================
#define function name() view returns (string)
#define function symbol() view returns (string)
#define function decimals() view returns (uint8)
#define function totalSupply() view returns (uint256)
#define function transferFrom(address,address,uint256) nonpayable returns ()
#define function transfer(address, uint256) nonpayable returns ()
#define function balanceOf(address) view returns (uint256)
#define function approve(address, uint256) nonpayable returns ()
#define function allowance(address, address) view returns (uint256)
#define function deposit() payable returns ()
#define function depositTo(address) payable returns ()
#define function depositAndApprove(address, uint256) payable returns ()
#define function withdraw(uint256) nonpayable returns ()
#define function withdrawTo(address, uint256) nonpayable returns ()
#define function withdrawAll() nonpayable returns ()
#define function withdrawAllTo(address) nonpayable returns ()
#define function withdrawFrom(address, uint256) nonpayable returns ()
#define function withdrawFromTo(address, address, uint256) nonpayable returns ()
#define function sweepLost() nonpayable returns ()
#define function depositWithOldTo(address) nonpayable returns ()
#define function withdrawAsOldTo(address, uint256) nonpayable returns ()
#define function reservesOld() view returns (uint256)

#define function nonces(address) view returns (uint256)
#define function DOMAIN_SEPARATOR() view returns (bytes32)
#define function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) nonpayable returns ()

// =================== Events ====================
#define event Transfer(address indexed, address indexed, uint256)
#define event Deposit(address indexed, uint256)
#define event Withdrawal(address indexed, uint256)
#define event Approval(address indexed, address indexed, uint256)
#define event DepositWithOld(address indexed, uint256)
